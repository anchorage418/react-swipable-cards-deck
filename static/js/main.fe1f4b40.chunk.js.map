{"version":3,"sources":["Deck/Deck.jsx","App.js","reportWebVitals.js","index.js"],"names":["cardTrans","z","containerTrans","x","y","rot","useGestureOpts","filterTaps","Deck","forwardRef","props","ref","adaptiveHeight","shiftY","items","leftLabel","maxVisibleStack","onSwipeLeft","onSwipeRight","onSwipeStart","onSwipeEnd","renderItem","resizeDebounce","rightLabel","translateZ","trashhold","useState","drag","heights","logs","setLogs","deck","setDeck","Set","gone","currentIndex","setCurrentIndex","label","setLabel","height","setHeight","resize","setResize","useSprings","length","i","delay","to","from","springs","setSprings","containerHeight","viewPort","window","innerWidth","console","log","elements","useRef","heightRef","prevItems","cardChildMeasureRef","useCallback","node","setTimeout","current","id","offsetHeight","Object","keys","n","JSON","stringify","getNextCardsIndexes","currIndex","map","o","splice","getX","dir","jumpToCardIndex","index","ungone","has","add","delete","indexOf","swipeBack","swipeLeft","config","friction","tension","item","swipeRight","useEffect","calcMax","arr","el","style","contentH","max","Math","debouncedResCb","debounce","addEventListener","removeEventListener","isEqual","clear","useImperativeHandle","bind","useDrag","gestureState","event","canceled","args","down","mx","movement","xDir","direction","humanDir","onRest","isReadyToLeave","floor","abs","changeLabel","eventType","type","pointerType","Fragment","padding","position","zIndex","wordBreak","className","minHeight","div","visibility","transform","interpolate","boxSizing","memo","name","next_deck","randomH","min","ceil","random","App","set","swiperRef","cardClick","onClick","color","textAlign","placeholder","document","getElementById","value","right","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fe1f4b40.chunk.js","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, forwardRef, useRef, useImperativeHandle, useCallback, memo } from 'react'\nimport PropTypes from 'prop-types';\nimport { useSprings, animated, interpolate } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport map from 'lodash/map';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport './Deck.css';\n\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to = (i, shiftY, translateZ) => ({ x: 0, y: i * shiftY, z: i * translateZ, rot: 0, delay: i * 100 });\nconst from = i => ({ x: 0, y: 0, z: 0, rot: 0 });\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst cardTrans = (z) => `perspective(1500px) translateZ(${z}px)`;\nconst containerTrans  = (x, y, rot) => {\n  return !x && !y ? 'none' : `translate3d(${x}px, ${y}px, 0px) rotate(${rot}deg)`;\n};\nconst useGestureOpts = { filterTaps: true };\nconst CARD_SHIFT_Y = 13;\nconst TRANSLATE_Z = -30;\nconst TRASHHOLD = 70;\nconst DEBOUNCE = 1000;\n\nconst Deck = forwardRef((props, ref) => {\n  const {\n    adaptiveHeight,\n    shiftY = CARD_SHIFT_Y,\n    items,\n    leftLabel,\n    maxVisibleStack,\n    onSwipeLeft,\n    onSwipeRight,\n    onSwipeStart,\n    onSwipeEnd,\n    renderItem,\n    resizeDebounce = DEBOUNCE,\n    rightLabel,\n    translateZ = TRANSLATE_Z,\n    trashhold = TRASHHOLD\n  } = props;\n  const [logs, setLogs] = useState({ drag: {}, heights: [] });\n  const [deck, setDeck] = useState([...items]);\n  const [gone] = useState(() => new Set());\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [label, setLabel] = useState('');\n  const [height, setHeight] = useState(0);\n  const [resize, setResize] = useState(0);\n  const [springs, setSprings] = useSprings(deck.length, i => ({ ...to(i, shiftY, translateZ), from: from(i) })); // Create a bunch of springs using the helpers above\n  const containerHeight = height + (deck.length === 1 ? 0 : deck.length <= maxVisibleStack ? deck.length * shiftY : maxVisibleStack * shiftY);\n  const viewPort = window.innerWidth + 200;\n  console.log('containerHeight', containerHeight);\n  console.log('height', height);\n  console.log('logs', logs);\n  console.log('resize', resize);\n\n  const elements = useRef([{}, false]);\n  const heightRef = useRef(height);\n  const prevItems = useRef(items);\n\n  const cardChildMeasureRef = useCallback(node => {\n    setTimeout(() => {\n      if (adaptiveHeight && node !== null && elements.current && (!elements.current[0][node.id] || elements.current[0][node.id].offsetHeight !== node.offsetHeight)) {\n        // console.log('node.offsetHeight', node.id, node.offsetHeight)\n        elements.current[0][node.id] = node;\n        elements.current[1] = Object.keys(elements.current[0]).length === deck.length;\n        if (elements.current[1]) setResize(n => n + 1);\n      }\n    }, 0)\n  }, [JSON.stringify(deck)]);\n\n  useEffect(() => {\n    if (adaptiveHeight && elements.current[1]) {\n      function calcMax() {\n        const arr = map(elements.current[0], (el) => {\n          el.style = '';\n          const contentH = el.offsetHeight;\n          el.style = 'flex: 1;';\n          return contentH;\n        });\n        const max = Math.max(...arr);\n        if (max !== height) {\n          heightRef.current = max;\n          setHeight(max);\n        }\n        setLogs(o => ({ ...o, heights: arr }));\n      }\n      function resizeCb() {\n        calcMax();\n      }\n      const debouncedResCb = debounce(resizeCb, resizeDebounce);\n      window.addEventListener(\"resize\", debouncedResCb);\n      calcMax();\n      return () => {\n        window.removeEventListener(\"resize\", debouncedResCb);\n      };\n    }\n  }, [adaptiveHeight, resize]);\n\n  useEffect(() => {\n    if (!isEqual(prevItems.current, items)) {\n      gone.clear();\n      elements.current = [{}, false];\n      setHeight(0);\n      setDeck(items);\n      setCurrentIndex(0);\n    }\n  }, [JSON.stringify(items)]);\n\n  useEffect(() => prevItems.current = items);\n\n  useImperativeHandle(ref, () => {\n    return {\n      swipeBack,\n      swipeLeft,\n      swipeRight,\n      jumpToCardIndex,\n    };\n  });\n\n  function getNextCardsIndexes(currIndex) {\n    return deck[currIndex] ? deck.map((o, i) => i).splice(currIndex, deck.length) : [];\n  }\n\n  function getX(dir) {\n    return viewPort * dir;\n  }\n\n  function changeLabel(mx = 0, down = false) {\n    if (down && Math.abs(mx) >= trashhold) {\n      setLabel(mx < 0 ? 'left' : 'right');\n    } else {\n      setLabel('');\n    }\n  }\n\n  function jumpToCardIndex(index = 0) {\n    index = +index;\n    if (index >= 0 && deck[index]) {\n      const ungone = getNextCardsIndexes(index);\n      setSprings(i => {\n        if (i < index) {\n          if (!gone.has(i)) {\n            gone.add(i);\n            return { x: viewPort * -1, rot: 70, delay: 0, };\n          }\n        } else {\n          if (gone.has(i)) gone.delete(i);\n          return { x: 0, y: ungone.indexOf(i) * shiftY, z: ungone.indexOf(i) * translateZ, rot: 0, delay: 0, };\n        }\n      });\n      setCurrentIndex(index);\n    }\n  }\n\n  function swipeBack() {\n    const index = currentIndex - 1;\n    if (index >= 0 && deck[index]) {\n      const ungone = getNextCardsIndexes(index);\n      setSprings(i => {\n        if (i === index) {\n          if (gone.has(i)) gone.delete(i);\n          return { x: 0, y: 0, z: 0, rot: 0, delay: 0, };\n        } else if (i > index) {\n          return { x: 0, y: ungone.indexOf(i) * shiftY, z: ungone.indexOf(i) * translateZ, rot: 0, delay: 0, };\n        }\n      });\n      setCurrentIndex(index);\n    }\n  }\n\n  function swipeLeft() {\n    const dir = -1;\n    const ungone = getNextCardsIndexes(currentIndex + 1);\n    const x = getX(dir);\n    gone.add(currentIndex);\n    setSprings(i => {\n      if (i === currentIndex) return { x, y: 0, rot: 70, delay: 0, config: { friction: 50, tension: 500 } };\n      if (!gone.has(i) && ungone.length) return { x: 0, y: ungone.indexOf(i) * shiftY, z: ungone.indexOf(i) * translateZ, rot: 0, delay: 0, };\n    });\n    setCurrentIndex(currentIndex + 1);\n    return { item: deck[currentIndex], index: currentIndex };\n  }\n\n  function swipeRight() {\n    const dir = 1;\n    const ungone = getNextCardsIndexes(currentIndex + 1);\n    const x = getX(dir);\n    gone.add(currentIndex);\n    setSprings(i => {\n      if (i === currentIndex) return { x, rot: -70, delay: 0, config: { friction: 50, tension: 500 } };\n      if (!gone.has(i) && ungone.length) return { x: 0, y: ungone.indexOf(i) * shiftY, z: ungone.indexOf(i) * translateZ, rot: 0, delay: 0, };\n    });\n    setCurrentIndex(currentIndex + 1);\n    return { item: deck[currentIndex], index: currentIndex };\n  }\n\n  const bind = useDrag(gestureState => {\n    const { event, canceled, args: [index], down, movement: [mx], direction: [xDir] } = gestureState;\n    // xDir on stop could be 0 or last value\n    const dir = xDir < 0 ? -1 : 1;\n    const humanDir = mx < 0 ? 'left' : 'right';\n    let onRest = () => {};\n    let isReadyToLeave = false;\n    // console.log('event', event)\n\n    if (onSwipeStart) onSwipeStart(humanDir);\n\n    setSprings(i => {\n      if (index !== i) return; // We're only interested in changing spring-data for the current spring\n      let x = down ? mx : 0;\n      let rot = -1 * Math.floor(mx / 10);\n      isReadyToLeave = Math.abs(mx) >= trashhold && ((xDir <= 0 && humanDir === 'left') || (xDir >= 0 && humanDir === 'right'));\n      changeLabel(mx, down);\n      if (!down && !isReadyToLeave) rot = 0;\n      if (!down && isReadyToLeave) {\n        const ungone = getNextCardsIndexes(i + 1);\n        gone.add(i);\n        x = getX(humanDir === 'left' ? -1 : 1);\n        rot = humanDir === 'left' ? 70 : -70;\n        setCurrentIndex(i + 1);\n        setSprings(i => {\n          if (!gone.has(i) && ungone.length) return { x: 0, y: ungone.indexOf(i) * shiftY, z: ungone.indexOf(i) * translateZ, rot: 0, delay: 0, };\n        });\n        setLabel('');\n        // if (humanDir === 'left') onRest = () => onSwipeLeft(i);\n        if (humanDir === 'left') onSwipeLeft(deck[i], i);\n        if (humanDir === 'right') onSwipeRight(deck[i], i);\n      }\n\n      setLogs(o => ({ ...o, drag: { eventType: event.type, pointerType: event.pointerType, down } }));\n\n      return { x, rot, delay: 0, config: { friction: 50, tension: down ? 800 : 500 }, onRest }\n    });\n\n    if (onSwipeEnd) onSwipeEnd(humanDir);\n  }, useGestureOpts);\n\n  return (\n    <React.Fragment>\n      <div style={{ padding: '0 16px', position: 'absolute', zIndex: 999 }}>\n        <div style={{ wordBreak: 'break-all' }}>{'Drag logs: ' + JSON.stringify(logs.drag)}</div>\n        <div style={{ wordBreak: 'break-all' }}>{'Items height: ' + JSON.stringify(logs.heights)}</div>\n        <div style={{ wordBreak: 'break-all' }}>{'height: ' + height}</div>\n        <div style={{ wordBreak: 'break-all' }}>{`Current index: ${currentIndex}`}</div>\n      </div>\n\n      <div className=\"deck-wrapper\" style={{ ...adaptiveHeight && height > 0 ? { minHeight: containerHeight } : {} }}>\n        <div className=\"deck\" style={{ ...adaptiveHeight && height > 0 ? { height } : {} }}>\n          {springs.map(({ x, y, z, rot }, i) => {\n            return (\n              <animated.div\n                key={i}\n                style={{\n                  ...i > currentIndex + maxVisibleStack || x < viewPort * -1 ? { visibility: 'hidden' } : {},\n                  zIndex: i === currentIndex ? 0 : i > currentIndex ? -i : 0,\n                  transform: interpolate([x, y, rot], containerTrans),\n                  // visibility: interpolate([x], (x) => {\n                  //   return i > currentIndex + maxVisibleStack || (x < 0 ? x * -1 : x) >= viewPort ? 'hidden' : 'visible'\n                  // })\n                }}\n                className=\"card-container\"\n              >\n                <animated.div\n                  {...bind(i)}\n                  id={`card__${i}`}\n                  style={{\n                    transform: interpolate([z], cardTrans)\n                  }}\n                  className={`card-outer ${i === currentIndex ? 'front-card' : ''}`}\n                >\n                  {i === currentIndex && label === 'left' && leftLabel}\n                  {i === currentIndex && label === 'right' && rightLabel}\n                  <div\n                    id={`card_ch_${i}`}\n                    ref={cardChildMeasureRef}\n                    className=\"card-inner\"\n                    style={{ ...adaptiveHeight ? { boxSizing: 'border-box' } : {}, /* border-box is required if adaptiveHeight enabled */ }}\n                  >\n                    {renderItem(deck[i], i)}\n                  </div>\n                </animated.div>\n              </animated.div>\n            );\n          })}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nDeck.propTypes = {};\n\nexport default memo(Deck);\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Swiper from './Deck/Deck';\nimport './App.css';\n\nlet deck = [\n  { id: 1, name: 'A' },\n  { id: 2, name: 'B' },\n  { id: 3, name: 'C' },\n  { id: 4, name: 'D' },\n  { id: 5, name: 'E' },\n];\nlet next_deck = [\n  { id: 6, name: 'F' },\n  { id: 7, name: 'G' },\n  { id: 8, name: 'H' },\n  { id: 9, name: 'I' },\n  { id: 10, name: 'J' },\n];\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst randomH = [...deck, ...next_deck].map(o => getRandomInt(50, 250));\n\nfunction App() {\n  const [items, set] = useState(deck);\n  const swiperRef = useRef(null);\n\n  function removeBack() {\n    if (swiperRef.current && swiperRef.current.swipeBack) {\n      swiperRef.current.swipeBack();\n    }\n  }\n\n  function swipeLeft() {\n    if (swiperRef.current && swiperRef.current.swipeLeft) {\n      const { item, index } = swiperRef.current.swipeLeft();\n      console.log('swipeLeft', item, index)\n    }\n  }\n\n  function swipeRight() {\n    if (swiperRef.current && swiperRef.current.swipeRight) {\n      const { item, index } = swiperRef.current.swipeRight();\n      console.log('swipeRight', item, index)\n    }\n  }\n\n  function onSwipeLeft(item, i) {\n    console.log('onSwipeLeft', item, i)\n  }\n\n  function onSwipeRight(item, i) {\n    console.log('onSwipeRight', item, i)\n  }\n\n  function jumpToCardIndex(index) {\n    if (swiperRef.current && swiperRef.current.jumpToCardIndex) {\n      swiperRef.current.jumpToCardIndex(index);\n    }\n  }\n\n  function onSwipeEnd() {\n    // console.log('END')\n  }\n\n  function onSwipeStart() {\n    // console.log('START')\n  }\n\n  function cardClick() {\n    console.log('CLICK')\n  }\n\n  const renderItem = useCallback((item, i) => (\n    <div className=\"my-card\">\n      <div className=\"my-card__img\">\n        image\n      </div>\n      <div className=\"my-card__text-content\" style={{ height: randomH[i] }} onClick={cardClick}>\n        <div style={{ color: 'red', textAlign: 'center' }}>\n          card text\n          <div>{item.name}</div>\n        </div>\n      </div>\n    </div>\n  ), []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"controllers-wrapper\">\n        <button className=\"controller\" onClick={() => set([...deck, ...next_deck])}>Add cards</button>\n        <button className=\"controller\" onClick={removeBack}>Return Last</button>\n        <button className=\"controller\" onClick={swipeLeft}>Swipe Left</button>\n        <button className=\"controller\" onClick={swipeRight}>Swipe Right</button>\n        <input id=\"next-index\" type=\"number\" placeholder=\"index\" min={0} className=\"input\"/>\n        <button className=\"controller\" onClick={() => jumpToCardIndex(document.getElementById('next-index').value)}>To index</button>\n      </div>\n      <Swiper\n        items={items}\n        renderItem={renderItem}\n        ref={swiperRef}\n        adaptiveHeight={true}\n        maxVisibleStack={4}\n        leftLabel={<div style={{ position: 'absolute', right: 0 }}>LEFT</div>}\n        rightLabel={<div style={{ position: 'absolute', left: 0 }}>RIGHT</div>}\n        onSwipeLeft={onSwipeLeft}\n        onSwipeRight={onSwipeRight}\n        onSwipeEnd={onSwipeEnd}\n        onSwipeStart={onSwipeStart}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}